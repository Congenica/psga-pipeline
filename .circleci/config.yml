version: 2.1

parameters:
  docker_version:
    type: string
    default: "19.03.13"
  db_user:
    type: string
    default: "postgres"
  db_password:
    type: string
    default: "somesecret"
  db_name:
    type: string
    default: "covid_pipeline_db"

executors:
  python:
    docker:
      - image: circleci/python:3.8
  python_with_db:
    docker:
      - image: circleci/python:3.8
        environment:
          PGHOST: localhost
          PGUSER: << pipeline.parameters.db_user >>
          DB_HOST: localhost
          DB_USER: << pipeline.parameters.db_user >>
          DB_PASSWORD: << pipeline.parameters.db_password >>
          DB_NAME: << pipeline.parameters.db_name >>
      - image: circleci/postgres:11-ram
        environment:
          POSTGRES_USER: << pipeline.parameters.db_user >>
          POSTGRES_PASSWORD: << pipeline.parameters.db_password >>

jobs:
  pre_commit_hooks:
    executor: python
    steps:
      - checkout
      - run:
          name: Run pre-commit checks
          command: |
            sudo pip install pre-commit==2.8.1
            pre-commit run --all-files

  build-and-test:
    executor: python_with_db
    steps:
      - setup_remote_docker:
          version: << pipeline.parameters.docker_version >>
          docker_layer_caching: true
      - checkout
      - run:
          name: Install sqitch and create database
          command: |
            sudo apt-get install -qq sqitch postgresql-client
            createdb covid_pipeline_db
            cd sqitch
            sqitch deploy
            sqitch verify
      - run:
          name: Install dependencies and run tests
          command: |
            poetry install
            poetry run pytest tests/
      - run:
          name: Build and Push
          command: |
            pip install --progress-bar off awscli
            NORMALISED_SLASHES=${CIRCLE_BRANCH//\//_}
            DOCKER_TAG_BRANCH=${NORMALISED_SLASHES//-/_}
            DOCKER_TAG="${DOCKER_TAG_BRANCH}_${CIRCLE_BUILD_NUM}"
            REGISTRY_URI="${ECREPOURI}${ECREPOPATH}"
            FULL_TAG="${REGISTRY_URI}:${DOCKER_TAG}"
            LATEST_IMAGE_TAG="${REGISTRY_URI}:${DOCKER_TAG_BRANCH}_latest"
            CIRCLE_TAG="${REGISTRY_URI}:circleci_${CIRCLE_BUILD_NUM}"
            eval $(aws ecr get-login --no-include-email --region eu-west-1)
            docker build -t ${FULL_TAG} \
                         -t ${CIRCLE_TAG} \
                         -t ${LATEST_IMAGE_TAG} \
                         -f docker/Dockerfile.covid-pipeline
                         .
            docker push ${FULL_TAG}
            docker push ${CIRCLE_TAG}
            docker push ${LATEST_IMAGE_TAG}

            # Log out the environment vars
            echo "CircleCI url to access"
            echo "${FULL_TAG}"


workflows:
  version: 2
  build_and_test_all:
    jobs:
    - pre_commit_hooks
    - build-and-test:
        context: AWS_ECR_CREDENTIALS
