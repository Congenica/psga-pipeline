name: Check and test
on:
  workflow_call:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  vars:
    runs-on: ubuntu-22.04
    environment: nonprod
    outputs:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_INSTANCE_TYPE: ${{ vars.AWS_INSTANCE_TYPE}}
      CICD_OIDC_ROLE: ${{ vars.CICD_OIDC_ROLE }}
      GH_RUNNER_SUBNET_ID: ${{ vars.GH_RUNNER_SUBNET_ID }}
      GH_RUNNER_SECURITY_GROUP_ID: ${{ vars.GH_RUNNER_SECURITY_GROUP_ID }}
      GH_RUNNER_IAM_ROLE_NAME: ${{ vars.GH_RUNNER_IAM_ROLE_NAME }}
    steps:
      - run: echo "Exposing env vars"

  start-runner:
    uses: Congenica/psga-reusable-workflows/.github/workflows/ec2-runner-start.yaml@main
    needs: vars
    secrets:
      role-to-assume: ${{ needs.vars.outputs.CICD_OIDC_ROLE }}
      github-token: ${{ secrets.GH_PSGA_SYSTEM_PAT }}
    with:
      aws-region: ${{ needs.vars.outputs.AWS_REGION }}
      ec2-instance-type: ${{ needs.vars.outputs.AWS_INSTANCE_TYPE }}
      subnet-id: ${{  needs.vars.outputs.GH_RUNNER_SUBNET_ID }}
      security-group-id: ${{  needs.vars.outputs.GH_RUNNER_SECURITY_GROUP_ID }}
      iam-role-name: ${{  needs.vars.outputs.GH_RUNNER_IAM_ROLE_NAME }}
      env_type: nonprod

  check_and_test:
    name: Install dependencies and run tests
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }}
    env:
      ALLURE_DIR: ${{ github.workspace }}/allure-results
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: pip install poetry==1.7

      - name: Pre-commit checks
        run: |
          pip install pre-commit==2.17
          pre-commit run --all-files

      - name: Install dependencies and run tests
        run: |
          poetry install
          # PYTHONPATH is required, and differnet inside the docker container
          PYTHONPATH=. poetry run pytest tests/ --alluredir=${{ env.ALLURE_DIR }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ needs.vars.outputs.AWS_REGION }}
          role-to-assume: ${{ needs.vars.outputs.CICD_OIDC_ROLE }}
          role-session-name: cicd-role-session
          mask-aws-account-id: true

      # Before copying Allure Results to S3, the number of existing results with the same Git hash are identified. This
      # number is appended as a suffix to the name of the artifact before copying to S3 to avoid overwriting any
      # existing results that were captured on this Git hash.

      # For example, when a set of tests are kicked off from a branch where the head of the branch has Git hash
      # e1e3a8195fecdd78cf0a78c648453314ca872b81:

      #   - The first set of Allure Results will be named e1e3a8195fecdd78cf0a78c648453314ca872b81_0.tar.gz
      #   - The second set of Allure Results will be named e1e3a8195fecdd78cf0a78c648453314ca872b81_1.tar.gz
      #   - etc
      - name: Compress Allure Results
        run: |
          ARTIFACT_S3_PATH_PARTIAL=s3://congenica-test-evidence/psga-pipeline-sars-cov-2/unit
          ARTIFACT_COUNT=$(aws s3 ls $ARTIFACT_S3_PATH_PARTIAL/${{ github.sha }} | wc -l)
          ARTIFACT_NAME=${{ github.sha }}_$ARTIFACT_COUNT.tar.gz
          ARTIFACT_PATH=${{ github.workspace }}/$ARTIFACT_NAME
          tar -czf $ARTIFACT_PATH -C ${{ env.ALLURE_DIR }} .
          echo "ALLURE_RESULTS_POD=$ARTIFACT_PATH" >> $GITHUB_ENV
          echo "ALLURE_RESULTS_S3=$ARTIFACT_S3_PATH_PARTIAL/$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Upload Allure Results to S3
        id: upload-to-s3
        run: aws s3 cp $ALLURE_RESULTS_POD $ALLURE_RESULTS_S3

  stop-runner:
    if: ${{ always() }} # required to stop the runner even if previous jobs failed or are cancelled
    needs:
      - start-runner # required to get output from the start-runner job
      - check_and_test # required to wait when the main job is done
      - vars
    uses: Congenica/psga-reusable-workflows/.github/workflows/ec2-runner-stop.yaml@main
    secrets:
      role-to-assume: ${{ needs.vars.outputs.CICD_OIDC_ROLE }}
      github-token: ${{ secrets.GH_PSGA_SYSTEM_PAT }}
    with:
      aws-region: ${{ needs.vars.outputs.AWS_REGION }}
      label: ${{ needs.start-runner.outputs.label }}
      ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
