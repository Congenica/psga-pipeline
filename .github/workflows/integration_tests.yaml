name: Run integration tests
on:
  workflow_call:
    secrets:
      CICD_OIDC_ROLE:
        required: true
      GH_PSGA_SYSTEM_PAT:
        required: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  start-runner:
    uses: Congenica/psga-reusable-workflows/.github/workflows/ec2-runner-start.yaml@main
    secrets:
      role-to-assume: ${{ secrets.CICD_OIDC_ROLE }}
      github-token: ${{ secrets.GH_PSGA_SYSTEM_PAT }}
    with:
      aws-region: ${{ vars.AWS_REGION }}
      ec2-instance-type: m5.2xlarge
      subnet-id: ${{ vars.GH_RUNNER_SUBNET_ID }}
      security-group-id: ${{ vars.GH_RUNNER_SECURITY_GROUP_ID }}
      iam-role-name: ${{ vars.GH_RUNNER_IAM_ROLE_NAME }}
      env_type: ${{ inputs.actions_env }}

  integration_tests:
    name: Integration Tests
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }}
    environment: ${{ inputs.actions_env }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.CICD_OIDC_ROLE }}
          role-session-name: cicd-role-session
          mask-aws-account-id: false
          output-credentials: true

      - name: Login to dev Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Kubectl
        uses: azure/setup-kubectl@v1

      - name: start minikube
        id: minikube
        run: |
          echo $PWD
          echo $HOME
          echo $USER
          cd /tmp
          echo "Installing minikube"
          curl -LO https://storage.googleapis.com/minikube/releases/v1.29.0/minikube-linux-amd64
          echo "aafb65cbee8e971ec00509fdb1817254b17d6bee4890b839c3b6e8f11e97413a minikube-linux-amd64" | sha256sum --check
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          echo "Installing kubectl"
          curl -LO "https://dl.k8s.io/release/v1.26.1/bin/linux/amd64/kubectl"
          echo "d57be22cfa25f7427cfb538cfc8853d763878f8b36c76ce93830f6f2d67c6e5d kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          cd /actions-runner/_work/psga-pipeline-sars-cov-2/psga-pipeline-sars-cov-2/minikube
          minikube start --cpus=6 --memory=28672 --vm-driver=docker --force
          minikube addons enable storage-provisioner

      - name: Run tests
        run: |
          export AWS_ACCESS_KEY_ID=${{ steps.creds.outputs.aws-access-key-id }}
          export AWS_SECRET_ACCESS_KEY=${{ steps.creds.outputs.aws-secret-access-key }}
          aws s3 ls
          ./startup.sh
          ./run_pipelines.sh
        #   sed -i "s/dev_latest/${{ github.sha }}/g" pipelines/*

  stop-runner:
    if: ${{ always() }} # required to stop the runner even if previous jobs failed or are cancelled
    needs:
      - start-runner # required to get output from the start-runner job
      - integration_tests # required to wait when the main job is done
    uses: Congenica/psga-reusable-workflows/.github/workflows/ec2-runner-stop.yaml@main
    secrets:
      role-to-assume: ${{ secrets.CICD_OIDC_ROLE }}
      github-token: ${{ secrets.GH_PSGA_SYSTEM_PAT }}
    with:
      aws-region: ${{ vars.AWS_REGION }}
      label: ${{ needs.start-runner.outputs.label }}
      ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
