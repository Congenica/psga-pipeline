FROM 144563655722.dkr.ecr.eu-west-1.amazonaws.com/congenica/dev/psga-pipeline-base:1.0.4

# pin the versions of pip and poetry
ENV PIP_VERSION=22.0.4 \
    POETRY_VERSION=1.1.13

ARG pathogen

COPY ./psga/common /app/psga/common
COPY ./psga/${pathogen} ./psga/*.py ./psga/*.sh ./psga/main.nf /app/psga/
COPY ./pyproject.toml ./poetry.lock ./app/
COPY ./scripts/util /app/scripts/util
COPY ./scripts/validation /app/scripts/validation
COPY ./scripts/${pathogen} /app/scripts/${pathogen}

# scripts for running the validation following integration tests execution
COPY ./jenkins/*.py ./app/jenkins/

WORKDIR /app/psga

RUN pip install --progress-bar=off --no-cache-dir --upgrade pip==${PIP_VERSION} && \
    pip install --progress-bar=off --no-cache-dir poetry==${POETRY_VERSION} && \
    # make poetry install everything system wide, no need for a virtualenv in docker
    poetry config virtualenvs.create false && \
    poetry install --no-interaction --no-ansi --no-dev

# generic construct if scripts must be executed at this stage (e.g. for generating default files)
RUN if [ -f /app/scripts/${pathogen}/Makefile ]; then cd /app/scripts/${pathogen} && make; fi;

ENTRYPOINT ["python", "autoresumer.py"]
