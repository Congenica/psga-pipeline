FROM python:3.10.7-slim-bullseye

RUN apt-get update \
  && apt-get install --yes --no-install-recommends build-essential procps wget default-jre libpq-dev rename \
  && apt-get clean -y \
  && rm -rf /var/lib/apt/lists/*


# Install the nf-amazon plugin once for all
ENV NXF_VER="22.09.7-edge"
RUN wget -qO- https://github.com/nextflow-io/nextflow/releases/download/v${NXF_VER}/nextflow-${NXF_VER}-all | bash \
  && chmod +x nextflow \
  && mv nextflow /usr/bin \
  && nextflow plugin install nf-amazon@1.10.7



# pin the versions of pip and poetry
ENV PIP_VERSION=22.2.2 \
    POETRY_VERSION=1.1.13

ARG pathogen

COPY ./psga/common /app/psga/common
COPY ./psga/${pathogen} ./psga/*.sh ./psga/main.nf /app/psga/
COPY ./pyproject.toml ./poetry.lock ./app/
COPY ./scripts/util /app/scripts/util
COPY ./scripts/validation /app/scripts/validation
COPY ./scripts/${pathogen} /app/scripts/${pathogen}

# scripts for running the validation following integration tests execution
COPY ./jenkins/*.py ./app/jenkins/

WORKDIR /app/psga

# make poetry install everything system wide, no need for a virtualenv in docker
RUN pip install --progress-bar=off --no-cache-dir --upgrade pip==${PIP_VERSION} \
  && pip install --progress-bar=off --no-cache-dir poetry==${POETRY_VERSION} \
  && poetry config virtualenvs.create false \
  && poetry install --no-interaction --no-ansi --no-dev

# generic construct if scripts must be executed at this stage (e.g. for generating default files)
RUN if [ -f /app/scripts/${pathogen}/Makefile ]; then cd /app/scripts/${pathogen} && make; fi;
