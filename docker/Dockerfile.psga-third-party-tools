FROM python:3.10.7-slim-bullseye

# REQUIREMENTS:
# * run docker/get_sars_cov_2_primers.sh and git add docker/primer_schemes

RUN apt-get update \
  && apt-get install -y --no-install-recommends git procps wget build-essential default-jre unzip libncurses5-dev libcurl4-openssl-dev libncursesw5-dev zlib1g-dev liblzma-dev libbz2-dev zlib1g-dev \
  && apt-get clean -y \
  && rm -rf /var/lib/apt/lists/*

COPY docker/primer_schemes /primer_schemes
COPY docker/psga.deps /


# install fastqc
RUN . /psga.deps \
  && cd /opt \
  && wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v${fastqc_version}.zip \
  && unzip fastqc_v${fastqc_version}.zip \
  && chmod 755 FastQC/fastqc \
  && ln -s /opt/FastQC/fastqc /usr/local/bin/fastqc \
  && rm fastqc_v${fastqc_version}.zip
# overwrite fastqc configuration so that we only run the QC tests we need
COPY data/fastqc_config_limits.txt /opt/FastQC/Configuration/limits.txt


# install read-it-and-keep (tool for human reads removal)
# Notes:
# a) the instructions for Dockerfile, docker pull and conda available with read-it-and-keep are broken..
# b) this block fixes the original installer and customise what we need
# c) these dependencies (see head of this file for reference) are required only by the code below:
#    - apt-get deps: liblzma-dev libbz2-dev zlib1g-dev
#    - python deps: pyfastaq
ENV LANG=C.UTF-8
RUN . /psga.deps \
  && mkdir /opt/read-it-and-keep \
  && cd /opt \
  && wget https://github.com/GlobalPathogenAnalysisService/read-it-and-keep/archive/refs/tags/v${readitandkeep_version}.tar.gz \
  && tar xzf v${readitandkeep_version}.tar.gz \
  && rm v${readitandkeep_version}.tar.gz \
  && cd read-it-and-keep-${readitandkeep_version}/src \
  && pip3 install pyfastaq \
  && make \
  && mv readItAndKeep /opt/read-it-and-keep/ \
  && mv ../tests/MN908947.3.fa . \
  && mv ../tests/MN908947.3.no_poly_A.fa . \
  && rm -rf /opt/read-it-and-keep-${readitandkeep_version}
ENV PATH=/opt/read-it-and-keep:$PATH

# install trimmomatic
RUN . /psga.deps \
  && cd /opt \
  && wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-${trimmomatic_version}.zip \
  && unzip Trimmomatic-${trimmomatic_version}.zip \
  && mv Trimmomatic-${trimmomatic_version} trimmomatic \
  && cd trimmomatic \
  && mv trimmomatic-${trimmomatic_version}.jar trimmomatic.jar

# install bowtie2
RUN . /psga.deps \
  && cd /opt \
  && wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/${bowtie2_version}/bowtie2-${bowtie2_version}-sra-linux-x86_64.zip/download \
  && unzip download \
  && mv bowtie2-${bowtie2_version}-sra-linux-x86_64 bowtie2 \
  && rm download
ENV PATH=/opt/bowtie2:$PATH

# install samtools (disable options as not necessary at this stage)
RUN . /psga.deps \
  && cd /opt \
  && wget https://github.com/samtools/samtools/releases/download/${samtools_version}/samtools-${samtools_version}.tar.bz2 \
  && tar xjf samtools-${samtools_version}.tar.bz2 \
  && rm samtools-${samtools_version}.tar.bz2 \
  && cd samtools-${samtools_version} \
  && ./configure --prefix /usr/local --without-curses \
  && make \
  && make install
