manifest {
    name = 'COVID pipeline'
    description = 'COVID pipeline'
    nextflowVersion = '>= 20.10.0'
    version = '1.0.0'
}

env {
    COVID_PIPELINE_ROOTDIR = "${HOME}/ps-bahrain-covid"
    COVID_PIPELINE_FASTQ_PATH = "${HOME}/Bahrain_COVID_s3_data_lite/sample_data"
    COVID_PIPELINE_WORKDIR = "${HOME}/covid-pipeline"
    COVID_PIPELINE_FASTA_PATH = "${env.COVID_PIPELINE_WORKDIR}/reheadered-fasta"
    COVID_PIPELINE_FASTA_PATH_QC_FAILED = "${env.COVID_PIPELINE_WORKDIR}/reheadered-fasta-qc-failed"
    COVID_PIPELINE_REPORTS_PATH = "${HOME}/reports"
}

params {
    /* parameters for ncov2019_artic_nf process docker image is passed as
     * a parameter as this process is an actual nextflow execution
     */
    ncov_docker_image = "ncov2019_artic_nf:1.0.0"
    ncov_prefix = "covid_test"

    // parameter for process concatenate_fasta
    // path within container covid-pipeline:1.0.0
    root_genome_fasta = "/app/data/FASTA/SARS-CoV-2.fasta"

    // parameter for process load_iseha_metadata
    metadata_file_name = "metadata.tsv"

    // parameters for process generate_report_strain_level_and_global_context
    pangolearn_lineage_notes_url = "https://raw.githubusercontent.com/cov-lineages/pangoLEARN/master/pangoLEARN/supporting_information/lineage_notes.txt"
    pangolearn_metadata_url = "https://raw.githubusercontent.com/cov-lineages/pangoLEARN/master/pangoLEARN/data/lineages.metadata.csv"
    // path within container covid-pipeline:1.0.0
    pangolearn_dir = "/app/data/pangoLEARN"
}


process {
    withName:load_iseha_metadata {
        container = 'covid-pipeline:1.0.0'
    }
    withName:reheader_genome_fasta {
        container = 'covid-pipeline:1.0.0'
    }
    withName:load_ncov_assembly_qc_to_db {
        container = 'covid-pipeline:1.0.0'
    }
    withName:prepare_tsv_for_nextstrain {
        container = 'covid-pipeline:1.0.0'
    }
    withName:pangolin_pipeline {
        container = 'pangolin:1.0.0'
    }
    withName:load_pangolin_data_to_db {
        container = 'covid-pipeline:1.0.0'
    }
   withName:concatenate_fasta {
        container = 'covid-pipeline:1.0.0'
   }
   withName:generate_report_strain_level_and_global_context {
        container = 'covid-pipeline:1.0.0'
   }
}
docker {
    enabled = true
    fixOwnership = true
    runOptions = "-u \$(id -u):\$(id -g)"
    envWhitelist = "DB_HOST,DB_PORT,DB_USER,DB_PASSWORD,DB_NAME"
}
