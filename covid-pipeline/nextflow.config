manifest {
    name = 'COVID pipeline'
    description = 'COVID pipeline'
    nextflowVersion = '>= 20.10.0'
    version = '1.0.0'
}

env {
    COVID_PIPELINE_ROOTDIR = "${HOME}/ps-bahrain-covid"
    COVID_PIPELINE_FASTQ_PATH = "${HOME}/Bahrain_COVID_s3_data_lite/sample_data"
    COVID_PIPELINE_WORKDIR = "${HOME}/covid-pipeline"
    COVID_PIPELINE_REPORTS_PATH = "${HOME}/reports"

    // The following env vars are set internally and should not be changed
    COVID_PIPELINE_MISSING_METADATA_PATH = "${env.COVID_PIPELINE_WORKDIR}/no-metadata-found-fastq"
    COVID_PIPELINE_FASTA_PATH = "${env.COVID_PIPELINE_WORKDIR}/reheadered-fasta"
    COVID_PIPELINE_FASTA_PATH_QC_FAILED = "${env.COVID_PIPELINE_WORKDIR}/reheadered-fasta-qc-failed"
}

params {
    /*
     * parameters for ncov2019_artic_nf process
     * ncov2019_artic_nf docker image is passed as a parameter as the process
     * for this pipeine run nextflow itself. Therefore, this docker image
     * is used to configure the --with-docker argument of that internal nextflow
     * execution
     */
    ncov_docker_image = "ncov2019_artic_nf:1.0.0"
    ncov_prefix = "covid_test"

    // parameter for process concatenate_fasta
    // path within container covid-pipeline:1.0.0
    root_genome_fasta = "/app/data/FASTA/SARS-CoV-2.fasta"

    // parameter for process load_iseha_metadata
    metadata_file_name = "metadata.tsv"

    // parameters for process generate_report_strain_level_and_global_context
    pangolearn_lineage_notes_url = "https://raw.githubusercontent.com/cov-lineages/pangoLEARN/master/pangoLEARN/supporting_information/lineage_notes.txt"
    pangolearn_metadata_url = "https://raw.githubusercontent.com/cov-lineages/pangoLEARN/master/pangoLEARN/data/lineages.metadata.csv"
    // path within container covid-pipeline:1.0.0
    pangolearn_dir = "/app/data/pangoLEARN"

    microreact_tsv = "microreact.tsv"

    illuminaPrefixes = false
    illuminaSuffixes = ['*_R{1,2}_001', '*_R{1,2}', '*_{1,2}' ]
    fastq_exts = ['.fastq.gz', '.fq.gz']
    // A parameter, required because of ncov method makeFastqSearchPath
    directory = env.COVID_PIPELINE_FASTQ_PATH
}


process {
    withName:load_iseha_metadata {
        container = 'covid-pipeline:1.0.0'
    }
    withName:reheader_genome_fasta {
        container = 'covid-pipeline:1.0.0'
    }
    withName:load_ncov_assembly_qc_to_db {
        container = 'covid-pipeline:1.0.0'
    }
    withName:prepare_tsv_for_nextstrain {
        container = 'covid-pipeline:1.0.0'
    }
    withName:prepare_microreact_tsv {
        container = 'covid-pipeline:1.0.0'
    }
    withName:pangolin_pipeline {
        container = 'pangolin:1.0.0'
    }
    withName:load_pangolin_data_to_db {
        container = 'covid-pipeline:1.0.0'
    }
   withName:concatenate_fasta {
        container = 'covid-pipeline:1.0.0'
   }
   withName:generate_report_strain_level_and_global_context {
        container = 'covid-pipeline:1.0.0'
   }
   withName:generate_report_strain_first_seen {
        container = 'covid-pipeline:1.0.0'
   }
   withName:nextstrain_pipeline {
        container = 'nextstrain:1.0.0'
        // run as root as input/output files are moved in the container.
        // UID and GID env vars are passed to fix file permissions
        containerOptions = "--user root --env UID=\$(id -u) --env GID=\$(id -g)"
   }
   withName:load_nextstrain_aa_muts_to_db {
        container = 'covid-pipeline:1.0.0'
   }
   withName:load_nextstrain_nt_muts_to_db {
        container = 'covid-pipeline:1.0.0'
   }
}


docker {
    enabled = true
    fixOwnership = true
    runOptions = "--user \$(id -u):\$(id -g)"
    envWhitelist = "DB_HOST,DB_PORT,DB_USER,DB_PASSWORD,DB_NAME"
}
