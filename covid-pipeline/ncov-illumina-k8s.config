// this config tells ncov how to run the illumina workflow
// and it is used by the ncov2019_artic_nf_illumina pod that spins up ncov nextflow pipeline sub pods

includeConfig 'executor.config'

process {
    executor = 'k8s'

    withName:readTrimming {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
    withName:articDownloadScheme {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "500 MB"
    }
    withName:indexReference {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
    withName:writeQCSummaryCSV {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "500 MB"
    }
    withName:readMapping {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
    withName:trimPrimerSequences {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
    withName:makeConsensus {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
    withName:callVariants {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
    withName:makeQCCSV {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
    withName:collateSamples {
        container = "${env.DOCKER_IMAGE_PREFIX}/ncov2019_artic_nf_illumina:${env.DOCKER_IMAGE_TAG}"
        cpus = "1"
        memory = "2 GB"
    }
}
